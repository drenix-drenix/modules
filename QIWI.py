from .. import loader, utils
from SimpleQIWI import QApi
def register(cb):
    cb(qiwiMod())
class qiwiMod(loader.Module):
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ QIWI –∫–æ—à–µ–ª—å–∫–µ"""
    strings = {'name': 'QIWI'}
    async def client_ready(self, client, db):
        self.db = db
        self.client = client
    async def setqiwinumbercmd(self, message):
        '''—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–º–µ—Ä–∞ QIWI'''
        args = utils.get_args_raw(message)
        if not args:
            return await utils.answer(message, "<b>–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ QIWI –∫–æ—à–µ–ª—å–∫–∞!</b>")
        self.db.set("qiwi", "number", args)
        return await utils.answer(message, "<b>–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>")
    async def setqiwitokencmd(self, message):
        '''—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ QIWI'''
        args = utils.get_args_raw(message)
        if not args:
            return await utils.answer(message, "<b>–≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ QIWI –∫–æ—à–µ–ª—å–∫–∞</b>")
        self.db.set("qiwi", "token", args)
        return await utils.answer(message, "<b>–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>")
    async def qiwicmd(self, message):
        '''–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º QIWI –∫–æ—à–µ–ª—å–∫–µ'''
        number = self.db.get("qiwi", "number")
        token = self.db.get("qiwi", "token")
        if not number or not token:
            return await utils.answer(message, "–∑–∞–ø–æ–ª–Ω–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–æ–º–µ—Ä –∏ —Ç–æ–∫–µ–Ω")
        data = {
            "643": "RUB",
            "840": "USD",
            "978": "EUR",
            "398": "KZT"
        }
        balances = []
        api = QApi(token=token, phone=number)
        try:
            a = api.full_balance
        except:
            return await utils.answer(message, "–∑–∞–ø–æ–ª–Ω–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–æ–º–µ—Ä –∏ —Ç–æ–∫–µ–Ω")
        for i in a:
            x = i['balance']
            balance = str(x['amount'])+" "+data[str(x['currency'])]
            balances.append(balance)
        bl = "\n".join(balances)
        try:
            pp = api.payments['data'][0]
        except:
            return await utils.answer(message, "–∑–∞–ø–æ–ª–Ω–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–æ–º–µ—Ä –∏ —Ç–æ–∫–µ–Ω")
        ppnum = pp['account']
        replaced = ppnum[5]+ppnum[6]+ppnum[7]+ppnum[8]+ppnum[9]
        ppnum = ppnum.replace(replaced, '*'*len(replaced))
        pp = "üí∏ <b>–ü–æ—Å–ª–µ–¥–Ωee –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–≥:</b>\n<code>"+ppnum+" - "+str(pp['sum']['amount'])+" "+data[str(pp['sum']['currency'])]+"</code>"
        itog = "üí∞ <b>–ú–æ–π –±–∞–ª–∞–Ω—Å QIWI:</b>\n<code>"+bl+"</code>\n\n"+pp
        await utils.answer(message, itog)
    async def sendqiwicmd(self, message):
        '''–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏'''
        number = self.db.get("qiwi", "number")
        token = self.db.get("qiwi", "token")
        args = utils.get_args_raw(message)
        if not number or not token or not args:
            return await utils.answer(message, "—Ç—ã –∑–∞–±—ã–ª —á—Ç–æ-—Ç–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ —É —Ç–µ–±—è –ø—É—Å—Ç—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã")
        sendto = utils.get_args(message)[0]
        sendamount = utils.get_args(message)[1]
        comment = args.split(sendamount)[1] or ''
        api = QApi(token=token, phone=number)
        if not sendto or not sendamount or not sendamount.isdigit():
            return await utils.answer(message, "—Ç—ã –∑–∞–±—ã–ª —á—Ç–æ-—Ç–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ —É —Ç–µ–±—è –ø—É—Å—Ç—ã–µ/–∫—Ä–∏–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã")
        try:
            api.pay(account=sendto, amount=int(sendamount), comment=comment)
        except:
            return await utils.answer(message, "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏!</b>")
        return await utils.answer(message, "üí∏ <b>–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</b>")